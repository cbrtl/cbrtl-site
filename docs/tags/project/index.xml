<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>project on cbrtl</title>
    <link>https://cbrtl.github.io/tags/project/</link>
    <description>Recent content in project on cbrtl</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 15 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://cbrtl.github.io/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project: Vyse</title>
      <link>https://cbrtl.github.io/posts/vyse/</link>
      <pubDate>Wed, 15 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://cbrtl.github.io/posts/vyse/</guid>
      <description>A dynamically typed, interpreted and fast scriptling language inspired by Lua for rapid prototyping of applications like video games.</description>
      <content:encoded><![CDATA[<p>Sometime during my 2nd year in college, I&rsquo;d made a hobby programming language that turned out quite well.
It&rsquo;s named &ldquo;Vyse&rdquo;, after <a href="https://dota2.fandom.com/wiki/Scythe_of_Vyse">Guinsoo&rsquo;s Scythe of Vyse</a> from DotA.</p>
<p>Vyse is a dynamically typed, interpreted and fast scriptling language inspired by Lua for rapid prototyping of applications like video games.
Programmers familiar with Lua/Javascript can pick up the language within an hour.
Vyse also comes with a C++ API for frictionless embedding in projects.</p>
<p>Features include:</p>
<ul>
<li>Modules, both native and user-level</li>
<li>An embedding API</li>
<li>Closures, higher order functions to facilitate FP.</li>
<li>Prototypical inheritance, inspired from JS and Lua.</li>
</ul>
<p>Since the language already has detailed (but remarkably outdated) documentation on <a href="https://injuly.in/vyse">its website</a>,
I won&rsquo;t bother rewriting any of that here.</p>
<p>Instead, here is the simple number-guessing program:</p>
<div class="highlight"><pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-rs" data-lang="rs"><span style="font-weight:bold">const</span> math = import(<span style="font-style:italic">&#34;math&#34;</span>)

<span style="font-weight:bold">fn</span> play() {
  <span style="font-weight:bold">const</span> num = math.randint(0, 100)
  <span style="font-weight:bold">let</span> guess = input(<span style="font-style:italic">&#34;guess: &#34;</span>):<span style="font-weight:bold">to_num</span>()
  <span style="font-weight:bold">let</span> n_attempts = 1
  <span style="font-weight:bold">while</span> guess != num {
    <span style="font-weight:bold">if</span> guess &lt; num {
      print(<span style="font-style:italic">&#34;Too low! Try higher.&#34;</span>)
    } <span style="font-weight:bold">else</span> {
      print(<span style="font-style:italic">&#34;Too high! Try lower.&#34;</span>)
    }

    n_attempts += 1
    guess = input(<span style="font-style:italic">&#34;guess: &#34;</span>):<span style="font-weight:bold">to_num</span>()
  }

  print(<span style="font-style:italic">&#34;Well done! number of attempts: &#34;</span>, n_attempts)
}

play()
</code></pre></div><p>Of course, it&rsquo;s possible to do more than just write simple terminal programs.
For instance, I&rsquo;m currently working on a <a href="https://github.com/cpp-gamedev/wex">2D game engine</a>
that will allow users to write games with the language.
This project hasn&rsquo;t seen any major progress in the past year owing to my busy (read: poorly managed) schedule,
however, I&rsquo;m looking to resume this project in the coming quarter.</p>
<p>Currently, there are no official releases for Vyse.
This is majorly due to me not being in possession of a windows (yuck) device ATM.
There are some bugs that I&rsquo;ve yet to prune out before I can make a stable v0.1 release for all platforms.</p>
<p>The one benefit of having no users, is a leisurely development pace.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
